# Sample UserPlex configuration file

# run every 15 minutes
cron: "*/15 * * * *"

ldap:
    uri: "ldap://ldap.example.net/dc=example,dc=net"
    username: bobkelso
    password: donut
    # set to false if you use self-signed certs or unknown CAs (bad!)
    insecure: false
    # only used if uri isn't ldaps (TLS)
    starttls: true
    # path to a file containing trusted root CA certificates
    # leave blank to use the system's default
    cacert:  ca.crt
    # tlscert and tlskey can be used to specify a client certificate & key
    # to connect to a ldaps server
    tlscert: client.crt
    tlskey:  client.key

notifications:
    email:
        # your smtp relay may require authentication (AWS SES does), so make
        # sure to set the parameters below to an authorized sender
        host: "email-smtp.us-east-1.amazonaws.com"
        port: 587
        from: "myauthorizedsender@example.net"
        cc:   "bob.kelso@gmail.com"
        replyto: "Something <something@example.com>"
        auth:
            user: "AKIAI3TZL"
            pass: "AoXAy......"

# A UID map translates a ldapuid into a localuid
mycustomawsuidmap1: &CUSTOMMAP1
    - ldapuid: bkelso
      localuid: bob

    - ldapuid: tanderson
      localuid: neo

modules:

    # authorizedkeys is a module that pull the public keys of a user and
    # writes them down into the destination
    - name: authorizedkeys
      ldapgroups:
        - sysadmins
        - developers
        - devssh
      create: true
      delete: true
      # anchor to the uid map defined above
      uidmap: *CUSTOMMAP1
      parameters:
          # destination is where the public keys are written
          # {ldap:uid} means the "uid" attribute is used to create
          # a file for each user in the groups listed above
          destination: /data/puppet/modules/users/files/{ldap:uid}/.ssh/authorized_keys
          # deletionmarker is a string that tells userplex how to recognize
          # files it manages, in order to delete them when the users are no
          # longer present in ldap
          deletionmarker: allsshusers

    - name: authorizedkeys
      ldapgroups:
        - sysadmins
      create: true
      delete: false
      uidmap: *CUSTOMMAP1
      parameters:
          # root is a special group that only has one authorized_keys file
          # and all the keys of all the group members are added to it
          destination: /data/puppet/modules/users/files/root/.ssh/authorized_keys

    # aws_iam manage users in AWS
    - name: aws
      ldapgroups:
        - sysadmins
        - developers
      # create users that exist in ldap and not in aws. also makes sure that
      # users are assigns to their roles, even if removed manually.
      create: true
      # delete aws users that are in the roles but no longer in ldap
      delete: true
      reset: true
      parameters:
          # users will be added to the following IAM groups
          iamgroups:
            - ldapmanaged
          # send email notifications to new users. If disabled, passwords of new
          # users are logged in the userplex output
          notifynewusers: true
          # from address for notifications
          smtpfrom: "User Operations <userops+userplex@example.net>"
          smtprelay: "localhost:25"
          signinurl: "https://myawsaccount.signin.aws.amazon.com/console"
      credentials:
          # leave these blank if your credentials are set as env variables,
          # or if you use AWS roles (which puts STS creds in the env)
          accesskey: AKIAnnnn
          secretkey: YOLOMAN

    # datadog invites users to datadog
    - name: datadog
      ldapgroups:
        - sysadmins
      credentials:
          apikey: 9775a026f1ca7d1c6c5af9d94d9595a4
          appkey: 87ce4a24youcouldntpossiblythinkthisisakey

    -   name: github
        ldapgroups:
        -   developers
        create: true
        notify:
            mode: smtp
            recipient: '{ldap:mail}'
        uidmap:
        -   ldapuid: foobar
            localuid: foo
        credentials:
            oauthtoken: 1982398notrealtoken
        parameters:
            userplexteamname: userplexed
            organizations:
            -   name: my-org
                teams:
                -   userplexed
                -   test-team
